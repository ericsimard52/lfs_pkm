declare -a depName=('Autoconf' "CLang from LLVM" "GTK+3" "GTK+2" "LibNotify" "NSS" "PulseAudio" "Rustc" "UnZip" "Yasm" "Zip") ## Name of the dependencies
declare -a depVersion=('2.13' '6.0.1' '3.22.30' '2.24.32' '0.7.7' "3.38" '12.2' '1.25.0' '6.0' '1.3.0' '3.0') ## Required version
declare -a depLocate=('autoconf' 'clang' 'gtk-launch' 'gtk-demo' 'notify-send' 'nss-config' 'pulseaudio' 'rustc' 'unzip' 'yasm' 'zip') ## File to run against command and locate if first 1 fails.

declare -a optDepName=('ICU' 'Libevent' 'Libvpx' 'SqLite')
declare -a optDepVersion=('62.1' '2.1.8' '1.7.0' '3.24.0')
declare -a optDepLocate=('icuinfo' 'event_rpcgen.py' 'vpxdec' 'sqlite3')

###
# Checking Dependencies
###
log "GEN|INFO|Checking dependencies." t
depOK=0
xx=0
depLen=${#depName[@]}
log "PKG|INFO|depLen: $depLen" t t
while [ $xx -lt $depLen ]; do
    log "PKG|INFO|x: $xx" t t
    log "PKG|INFO|Checking for ${depName[$xx]}..." t
    checkInstalled ${depLocate[$xx]}
    if [[ $? > 0 ]]; then
        log "{GEN,PKG,ERR}|ERROR|${depName[$xx]} needed and not found." t
        depOK=1
    else
        log "PKG|INFO|Check for version >= ${depVersion[$xx]}" t
        checkVersion "${depLocate[$xx]}" "${depVersion[$xx]}"
        if [[ $? > 0 ]]; then
            log "{GEN,PKG,ERR}|ERROR|${depName[$xx]} version not matched." t
            depOK=1
        fi
        if [[ $depOK = 0 ]]; then
            log "PKG|INFO|${depName[$xx]} good..."
        fi
    fi
    ((xx++))
done

if [[ $depOK > 0 ]]; then
    log "{GEN,PKG}|ERROR|Dependencies not met." t
    return 1
fi
log "{GEN,PKG}|INFO|Dependencies ok. $xx" t
